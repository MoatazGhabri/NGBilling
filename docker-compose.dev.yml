version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ngbilling-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ngbilling
      MYSQL_USER: ngbilling
      MYSQL_PASSWORD: ngbilling123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./backend/src/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ngbilling-network-dev
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "ngbilling", "-pngbilling123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ngbilling-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: ngbilling
      DB_PASSWORD: ngbilling123
      DB_DATABASE: ngbilling
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ngbilling-network-dev
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads

  # Frontend React App (Development)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ngbilling-frontend-dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ngbilling-network-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  mysql_data_dev:

networks:
  ngbilling-network-dev:
    driver: bridge 